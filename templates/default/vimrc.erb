" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
" Begin using Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
filetype off
" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'
" Golang development tools
Plugin 'fatih/vim-go'
" Press ctrl-p for a quick-open list with fuzzy matching
Plugin 'kien/ctrlp.vim'
" Support for Markdown syntax
Plugin 'plasticboy/vim-markdown'
" Support for JSON
Plugin 'helino/vim-json'
" Display compilation errors in the left margin
Plugin 'scrooloose/syntastic'
" Deep Git integration
Plugin 'tpope/vim-fugitive' 
" Git diff markings in the left margin
" [SJW 29-Jul-2013] FIXME: GitGutter freezes in large repos.
Plugin 'airblade/vim-gitgutter' 
" Better status bar
Plugin 'Lokaltog/vim-powerline' 
 " Some useful commands like :SudoWrite
Plugin 'tpope/vim-eunuch'
" Molokai color scheme
Plugin 'tomasr/molokai' 
 " YCM is good but requires recompiling VIM. Let's use just the pythonic part, Jedi-vim.
 " If you can be bothered, worth recompiling VIM to get YCM
" Plugin 'Valloric/YouCompleteMe'
" Python autocompletion (usurped by YCM if using it)
Plugin 'davidhalter/jedi-vim'
" A nice buffer viewer
Plugin 'jeetsukumaran/vim-buffergator'
" Metaswitch trace formatter
" Plugin 'file:///home/gulfstream/.vim/sjw_plugins/traceformat'
" Plugin 'ssh://git@gitlab.datcon.co.uk/vimips.git'
" Silver Searcher
Plugin 'rking/ag.vim'
" Tagbar
Plugin 'majutsushi/tagbar'
" NERDTree
Plugin 'scrooloose/nerdtree'

" Two lines mandatory for Vundle finishing
call vundle#end()
filetype plugin indent on

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup    " do not keep a backup file, use versions instead
else
  set backup    " keep a backup file
endif

" Sane defaults
set number
set ttyfast
set history=200
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands

" Configure searching
set ignorecase
set smartcase
set incsearch		" do incremental searching

" Indentations
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set cindent
autocmd FileType c setlocal shiftwidth=2 tabstop=2
autocmd FileType cpp setlocal shiftwidth=2 tabstop=2
autocmd FileType html setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType python setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2


" Spellcheck (Only for text files)
autocmd FileType text\|mkd setlocal spell spelllang=en_gb

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch

  " Throw ugly colors behind trailing whitespace
  match Todo /\s\+$/
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

  " Auto-reload the vimrc file when edited in Vim
  augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
  augroup END " }

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

" Ctrl-P
let g:ctrlp_custom_ignore = '\v[\/](.git|htmlcov|eggs)$'

" Syntastic
let g:syntastic_enable_signs=1
let g:syntastic_auto_jump=0
let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'

" Colorscheme
set background=dark
let g:rehash256=1
silent! colorscheme molokai

" Powerline
set laststatus=2
set encoding=utf-8

" Tagbar
nmap <F8> :tagbarToggle<CR>

" Textwidth
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h set textwidth=79
set colorcolumn=+1
highlight ColorColumn ctermbg=235 guibg=#2c2d27

" Allow "%%" to mean path of current file in command line
cabbr <expr> %% expand('%:p:h')

" Auto-find tag files
set tags=./tags;/

" No file.c~ files.  They are super-annoying, and we have git now.
set nobackup
set nowritebackup

" Line wrapping? No!
set nowrap

" Relative line number hybrid mode...
set number
set relativenumber
" ...but normal line numbers in Insert mode.
autocmd InsertEnter * silent! :set norelativenumber
autocmd InsertLeave,BufNewFile,VimEnter * silent! :set relativenumber
